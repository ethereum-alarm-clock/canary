'use strict'; // Copyright 2015-2017 Parity Technologies (UK) Ltd.
// This file is part of Parity.

// Parity is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// Parity is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with Parity.  If not, see <http://www.gnu.org/licenses/>.
var _require =
require('js-sha3'),keccak_256 = _require.keccak_256; // eslint-disable-line camelcase
var _require2 = require('../spec/paramType/format'),fromParamType = _require2.fromParamType;

function eventSignature(eventName, params) {var _parseName =
  parseName(eventName),strName = _parseName.strName,name = _parseName.name;
  var types = (params || []).map(fromParamType).join(',');
  var id = strName + '(' + types + ')';
  var signature = strName ? keccak_256(id) : '';

  return { id: id, name: name, signature: signature };
}

function methodSignature(methodName, params) {var _eventSignature =
  eventSignature(methodName, params),id = _eventSignature.id,name = _eventSignature.name,signature = _eventSignature.signature;

  return { id: id, name: name, signature: signature.substr(0, 8) };
}

function parseName(name) {
  var strName = '' + (name || '');
  var index = strName.indexOf('(');

  if (index === -1) {
    return { strName: strName, name: name };
  }

  var trimmedName = strName.slice(0, index);

  return {
    strName: trimmedName,
    name: trimmedName };

}

module.exports = {
  eventSignature: eventSignature,
  methodSignature: methodSignature };